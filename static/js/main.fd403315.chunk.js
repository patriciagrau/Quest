(this["webpackJsonpxstate-react-typescript-template"]=this["webpackJsonpxstate-react-typescript-template"]||[]).push([[0],{24:function(t,e,n){},35:function(t,e,n){"use strict";n.r(e),n.d(e,"nluRequest",(function(){return N}));var o=n(23),a=n(10),r=(n(24),n(7),n(20)),s=n(41),c=n(4),i=n(40),l=n(39);function p(t){return Object(c.k)((e=>({type:"SPEAK",value:t})))}function y(){return Object(c.k)("LISTEN")}const m={John:{person:"John Appleseed"},Minerva:{person:"Minerva S"},"your mom":{person:"my mom, Patricia"},mark:{person:"Marc G"},vladislav:{person:"Vladislav M"},Jacob:{person:"Jacobo"},"on Monday":{day:"Monday"},"on Tuesday":{day:"Tuesday"},"on Wednesday":{day:"Wednesday"},"on Thursday":{day:"Thursday"},"on Friday":{day:"Friday"},"on Saturday":{day:"Saturday"},"on Sunday":{day:"Sunday"},tomorrow:{day:"tomorrow"},"at 9":{time:"9:00"},"at 10":{time:"10:00"},"at 11":{time:"11:00"},"at noon":{time:"12:00"}},u={yes:{yesNo:"yes"},yup:{yesNo:"yes"},yeah:{yesNo:"yes"},"of course":{yesNo:"yes"},duh:{yesNo:"yes"},no:{yesNo:"no"},niet:{yesNo:"no"},"no way":{yesNo:"no"},nope:{yesNo:"no"}},d={initial:"welcome",states:{init:{on:{CLICK:"welcome"}},welcome:{initial:"prompt",on:{ENDSPEECH:"who"},states:{prompt:{entry:p("Let's create an appointment")},testState:{entry:p("Hey!")}}},who:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"person"in(m[t.recResult]||{}),actions:Object(c.b)((t=>({person:m[t.recResult].person}))),target:"day"},{target:".nomatch"}]},states:{prompt:{entry:p("Who are you meeting with?"),on:{ENDSPEECH:"ask"}},ask:{entry:y()},nomatch:{entry:p("Sorry I don't know them"),on:{ENDSPEECH:"prompt"}}}},day:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"day"in(m[t.recResult]||{}),actions:Object(c.b)((t=>({day:m[t.recResult].day}))),target:"wholeDay"},{target:".nomatch"}]},states:{prompt:{entry:Object(c.k)((t=>({type:"SPEAK",value:"OK. ".concat(t.person,". On which day is your meeting?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:y()},nomatch:{entry:p("Sorry, when?"),on:{ENDSPEECH:"ask"}}}},wholeDay:{initial:"prompt",on:{RECOGNISED:[{cond:t=>!!u[t.recResult]&&"yes"===u[t.recResult].yesNo,target:"final1"},{cond:t=>!!u[t.recResult]&&"no"===u[t.recResult].yesNo,target:"time"},{target:".nomatch"}]},states:{prompt:{entry:Object(c.k)((t=>({type:"SPEAK",value:"OK. ".concat(t.day,". Will it take the whole day?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:y()},nomatch:{entry:p("Sorry, yes or no?"),on:{ENDSPEECH:"ask"}}}},final1:{initial:"prompt",on:{RECOGNISED:[{cond:t=>!!u[t.recResult]&&"yes"===u[t.recResult].yesNo,target:"final"},{cond:t=>!!u[t.recResult]&&"no"===u[t.recResult].yesNo,target:"who"},{target:".nomatch"}]},states:{prompt:{entry:Object(c.k)((t=>({type:"SPEAK",value:"OK. Do you want me to create an appointment with ".concat(t.person," on ").concat(t.day," for the whole day?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:y()},nomatch:{entry:p("Sorry, yes or no?"),on:{ENDSPEECH:"ask"}}}},time:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"time"in(m[t.recResult]||{}),actions:Object(c.b)((t=>({time:m[t.recResult].time}))),target:"final2"},{target:".nomatch"}]},states:{prompt:{entry:Object(c.k)((t=>({type:"SPEAK",value:"OK. What time is your meeting?"}))),on:{ENDSPEECH:"ask"}},ask:{entry:y()},nomatch:{entry:p("Sorry, could you repeat that?"),on:{ENDSPEECH:"ask"}}}},final2:{initial:"prompt",on:{RECOGNISED:[{cond:t=>!!u[t.recResult]&&"yes"===u[t.recResult].yesNo,target:"final"},{cond:t=>!!u[t.recResult]&&"no"===u[t.recResult].yesNo,target:"who"},{target:".nomatch"}]},states:{prompt:{entry:Object(c.k)((t=>({type:"SPEAK",value:"OK. Do you want me to create an appointment with ".concat(t.person," on ").concat(t.day," at ").concat(t.time,"?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:y()},nomatch:{entry:p("Sorry, yes or no?"),on:{ENDSPEECH:"ask"}}}},final:{initial:"prompt",states:{prompt:{entry:Object(c.k)((t=>({type:"SPEAK",value:"Your appointment has been created."})))}}}}};function E(t){return Object(c.k)((e=>({type:"SPEAK",value:t})))}const h={initial:"init",states:{init:{on:{CLICK:"welcome"}},welcome:{initial:"prompt",on:{RECOGNISED:{target:"invoking_rasa"}},states:{prompt:{entry:E("What would you like to do?"),on:{ENDSPEECH:"ask"}},ask:{entry:Object(c.k)("LISTEN")},nomatch:{entry:E("Pick appointment, to do item or timer"),on:{ENDSPEECH:"prompt"}}}},appointment:Object(a.a)({},d),toDoItem:{initial:"prompt",states:{prompt:{entry:E("Let's create a to do item!")}}},timer:{initial:"prompt",states:{prompt:{entry:E("Let's create a timer!")}}},invoking_rasa:{invoke:{id:"rasa",src:(t,e)=>N(t.recResult),onDone:{target:"choosing_intent",actions:Object(c.b)(((t,e)=>(console.log(e.data),{intent_res:e.data})))},onError:{target:"welcome"}}},choosing_intent:{initial:"redirecting",on:{ENDSPEECH:[{cond:t=>"appointment"===t.intent_res.intent.name,target:"appointment"},{cond:t=>"to_do_item"===t.intent_res.intent.name,target:"toDoItem"},{cond:t=>"timer"===t.intent_res.intent.name,target:"timer"},{target:".nomatch"}]},states:{nomatch:{entry:E("Pick appointment, to do item or timer"),on:{ENDSPEECH:"..welcome"}},redirecting:{entry:E("Redirecting...")}}},answer:{entry:Object(c.k)((t=>({type:"SPEAK",value:"".concat(t.intent_res.intent.name)}))),on:{ENDSPEECH:"init"}}}};var g=n(19),S=n(12);Object(l.a)({url:"https://statecharts.io/inspect",iframe:!1});const b=Object(s.a)({id:"root",type:"parallel",states:{dm:Object(a.a)({},h),asrtts:{initial:"idle",states:{idle:{on:{LISTEN:"recognising",SPEAK:{target:"speaking",actions:Object(c.b)(((t,e)=>({ttsAgenda:e.value})))}}},recognising:{entry:"recStart",exit:"recStop",on:{ASRRESULT:{actions:["recLogResult",Object(c.b)(((t,e)=>({recResult:e.value})))],target:".match"},RECOGNISED:"idle"},states:{match:{entry:Object(c.k)("RECOGNISED")}}},speaking:{entry:"ttsStart",on:{ENDSPEECH:"idle"}}}}}},{actions:{recLogResult:t=>{console.log("<< ASR: "+t.recResult)},test:()=>{console.log("test")},logIntent:t=>{console.log("<< NLU intent: "+t.nluData.intent.name)}}}),O=t=>{switch(!0){case t.state.matches({asrtts:"recognising"}):return Object(S.jsx)("button",Object(a.a)(Object(a.a)({type:"button",className:"glow-on-hover",style:{animation:"glowing 20s linear"}},t),{},{children:"Listening..."}));case t.state.matches({asrtts:"speaking"}):return Object(S.jsx)("button",Object(a.a)(Object(a.a)({type:"button",className:"glow-on-hover",style:{animation:"bordering 1s infinite"}},t),{},{children:"Speaking..."}));default:return Object(S.jsx)("button",Object(a.a)(Object(a.a)({type:"button",className:"glow-on-hover"},t),{},{children:"Click to start"}))}};function k(){const t=Object(g.useSpeechSynthesis)({onEnd:()=>{y("ENDSPEECH")}}),e=t.speak,n=t.cancel,a=(t.speaking,Object(g.useSpeechRecognition)({onResult:t=>{y({type:"ASRRESULT",value:t})}})),r=a.listen,s=(a.listening,a.stop),c=Object(i.b)(b,{devTools:!0,actions:{recStart:Object(i.a)((()=>{console.log("Ready to receive a color command."),r({interimResults:!1,continuous:!0})})),recStop:Object(i.a)((()=>{console.log("Recognition stopped."),s()})),changeColour:Object(i.a)((t=>{console.log("Repainting..."),document.body.style.background=t.recResult})),ttsStart:Object(i.a)(((t,n)=>{console.log("Speaking..."),e({text:t.ttsAgenda})})),ttsCancel:Object(i.a)(((t,e)=>{console.log("TTS STOP..."),n()}))}}),l=Object(o.a)(c,3),p=l[0],y=l[1];l[2];return Object(S.jsx)("div",{className:"App",children:Object(S.jsx)(O,{state:p,onClick:()=>y("CLICK")})})}const N=t=>fetch(new Request("https://cors-anywhere.herokuapp.com/https://miauppointments.herokuapp.com/model/parse/",{method:"POST",headers:{Origin:"http://localhost:3000/"},body:'{"text": "'.concat(t,'"}')})).then((t=>t.json())),j=document.getElementById("root");r.render(Object(S.jsx)(k,{}),j)}},[[35,1,2]]]);
//# sourceMappingURL=main.fd403315.chunk.js.map